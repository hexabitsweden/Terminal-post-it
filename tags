!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/hexabit/GIT_DO_NOT_DELETE/Terminal-post-it/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
MAX	postit.c	/^#define MAX /;"	d	file:
SIZE	postit.c	/^#define SIZE /;"	d	file:
ant	postit.c	/^int ant;$/;"	v	typeref:typename:int
appendNote	postit.c	/^int appendNote()$/;"	f	typeref:typename:int
archiveNote	postit.c	/^void archiveNote()$/;"	f	typeref:typename:void
bblue	addmore.c	/^#define bblue /;"	d	file:
bblue	addnote.c	/^#define bblue /;"	d	file:
bblue	fgets.c	/^#define bblue /;"	d	file:
bblue	markAsRead.c	/^#define bblue /;"	d	file:
bblue	postit.c	/^#define bblue /;"	d	file:
bcolor	postit.c	/^char bcolor[6];$/;"	v	typeref:typename:char[6]
bcolors	postit.c	/^char bcolors[10];$/;"	v	typeref:typename:char[10]
bgreen	addmore.c	/^#define bgreen /;"	d	file:
bgreen	addnote.c	/^#define bgreen /;"	d	file:
bgreen	fgets.c	/^#define bgreen /;"	d	file:
bgreen	markAsRead.c	/^#define bgreen /;"	d	file:
bgreen	postit.c	/^#define bgreen /;"	d	file:
bgreenb	postit.c	/^#define bgreenb /;"	d	file:
black	addmore.c	/^#define black /;"	d	file:
black	addnote.c	/^#define black /;"	d	file:
black	fgets.c	/^#define black /;"	d	file:
black	markAsRead.c	/^#define black /;"	d	file:
black	postit.c	/^#define black /;"	d	file:
blue	addmore.c	/^#define blue /;"	d	file:
blue	addnote.c	/^#define blue /;"	d	file:
blue	fgets.c	/^#define blue /;"	d	file:
blue	markAsRead.c	/^#define blue /;"	d	file:
blue	postit.c	/^#define blue /;"	d	file:
bpurple	addmore.c	/^#define bpurple /;"	d	file:
bpurple	addnote.c	/^#define bpurple /;"	d	file:
bpurple	fgets.c	/^#define bpurple /;"	d	file:
bpurple	markAsRead.c	/^#define bpurple /;"	d	file:
bpurple	postit.c	/^#define bpurple /;"	d	file:
bred	addmore.c	/^#define bred /;"	d	file:
bred	addnote.c	/^#define bred /;"	d	file:
bred	fgets.c	/^#define bred /;"	d	file:
bred	markAsRead.c	/^#define bred /;"	d	file:
bred	postit.c	/^#define bred /;"	d	file:
brown	addmore.c	/^#define brown /;"	d	file:
brown	addnote.c	/^#define brown /;"	d	file:
brown	fgets.c	/^#define brown /;"	d	file:
brown	markAsRead.c	/^#define brown /;"	d	file:
brown	postit.c	/^#define brown /;"	d	file:
bufsize	postit.c	/^#define bufsize /;"	d	file:
bwhite	postit.c	/^#define bwhite /;"	d	file:
byellow	addmore.c	/^#define byellow /;"	d	file:
byellow	addnote.c	/^#define byellow /;"	d	file:
byellow	fgets.c	/^#define byellow /;"	d	file:
byellow	markAsRead.c	/^#define byellow /;"	d	file:
byellow	postit.c	/^#define byellow /;"	d	file:
cc	postit.c	/^char cc;$/;"	v	typeref:typename:char
cmd	postit.c	/^char cmd[SIZE];$/;"	v	typeref:typename:char[]
cmds	addnote.c	/^void cmds(char *inpt, string text)$/;"	f	typeref:typename:void
cols	fgets.c	/^int cols;$/;"	v	typeref:typename:int
colums	postit.c	/^int colums;$/;"	v	typeref:typename:int
cyan	addmore.c	/^#define cyan /;"	d	file:
cyan	addnote.c	/^#define cyan /;"	d	file:
cyan	fgets.c	/^#define cyan /;"	d	file:
cyan	markAsRead.c	/^#define cyan /;"	d	file:
cyan	postit.c	/^#define cyan /;"	d	file:
file	postit.c	/^char file[8];$/;"	v	typeref:typename:char[8]
files	postit.c	/^char files[50];$/;"	v	typeref:typename:char[50]
fname	addmore.c	/^char fname[100];$/;"	v	typeref:typename:char[100]
fname	addnote.c	/^char fname[100];$/;"	v	typeref:typename:char[100]
fname	fgets.c	/^char fname[100];$/;"	v	typeref:typename:char[100]
fname	markAsRead.c	/^char fname[100];$/;"	v	typeref:typename:char[100]
fname2	addmore.c	/^char fname2[100];$/;"	v	typeref:typename:char[100]
fname2	addnote.c	/^char fname2[100];$/;"	v	typeref:typename:char[100]
fname2	fgets.c	/^char fname2[100];$/;"	v	typeref:typename:char[100]
fname2	markAsRead.c	/^char fname2[100];$/;"	v	typeref:typename:char[100]
fp	postit.c	/^FILE *fp;$/;"	v	typeref:typename:FILE *
ftype	postit.c	/^char ftype[]=".txt";$/;"	v	typeref:typename:char[]
gray	addmore.c	/^#define gray /;"	d	file:
gray	addnote.c	/^#define gray /;"	d	file:
gray	fgets.c	/^#define gray /;"	d	file:
gray	markAsRead.c	/^#define gray /;"	d	file:
gray	postit.c	/^#define gray /;"	d	file:
green	addmore.c	/^#define green /;"	d	file:
green	addnote.c	/^#define green /;"	d	file:
green	fgets.c	/^#define green /;"	d	file:
green	markAsRead.c	/^#define green /;"	d	file:
green	postit.c	/^#define green /;"	d	file:
i	addmore.c	/^int i;$/;"	v	typeref:typename:int
i	addnote.c	/^int i;$/;"	v	typeref:typename:int
i	fgets.c	/^int i;$/;"	v	typeref:typename:int
i	markAsRead.c	/^int i;$/;"	v	typeref:typename:int
i2	addmore.c	/^int i2;$/;"	v	typeref:typename:int
i2	addnote.c	/^int i2;$/;"	v	typeref:typename:int
i2	fgets.c	/^int i2;$/;"	v	typeref:typename:int
i2	markAsRead.c	/^int i2;$/;"	v	typeref:typename:int
inpt	addmore.c	/^char inpt[20];$/;"	v	typeref:typename:char[20]
inpt	addnote.c	/^char *inpt;$/;"	v	typeref:typename:char *
inpt	markAsRead.c	/^char inpt[20];$/;"	v	typeref:typename:char[20]
inpt	postit.c	/^void inpt ()$/;"	f	typeref:typename:void
killNote	postit.c	/^void killNote()$/;"	f	typeref:typename:void
listdir	postit.c	/^char listdir(char files)$/;"	f	typeref:typename:char
lister	postit.c	/^string lister[40];$/;"	v	typeref:typename:string[40]
magenta	addmore.c	/^#define magenta /;"	d	file:
magenta	addnote.c	/^#define magenta /;"	d	file:
magenta	fgets.c	/^#define magenta /;"	d	file:
magenta	markAsRead.c	/^#define magenta /;"	d	file:
magenta	postit.c	/^#define magenta /;"	d	file:
main	addmore.c	/^int main (int argc, char const *argv[])$/;"	f	typeref:typename:int
main	addnote.c	/^int main (int argc, char const *argv[])$/;"	f	typeref:typename:int
main	fgets.c	/^int main (int argc, char const *argv[])$/;"	f	typeref:typename:int
main	markAsRead.c	/^int main (int argc, char const *argv[])$/;"	f	typeref:typename:int
main	postit.c	/^int main (int argc, char const *argv[])$/;"	f	typeref:typename:int
makeBars	postit.c	/^int makeBars(int ant, string bcolors) {$/;"	f	typeref:typename:int
makeNewNote	postit.c	/^int makeNewNote()$/;"	f	typeref:typename:int
makePostit	postit.c	/^int makePostit(int colums, char* bcolors) {$/;"	f	typeref:typename:int
makePostmini	postit.c	/^int makePostmini(int colums, string namn, string bcolors) {$/;"	f	typeref:typename:int
markDone	postit.c	/^void markDone()$/;"	f	typeref:typename:void
men	postit.c	/^#define men    "menu/;"	d	file:
menu	postit.c	/^int  menu() {$/;"	f	typeref:typename:int
menucol	addmore.c	/^#define menucol /;"	d	file:
menucol	addnote.c	/^#define menucol /;"	d	file:
menucol	fgets.c	/^#define menucol /;"	d	file:
menucol	markAsRead.c	/^#define menucol /;"	d	file:
menucol	postit.c	/^#define menucol /;"	d	file:
name	postit.c	/^char name[100];$/;"	v	typeref:typename:char[100]
namn	postit.c	/^char namn[10];$/;"	v	typeref:typename:char[10]
nname	markAsRead.c	/^char nname[100];$/;"	v	typeref:typename:char[100]
none	addmore.c	/^#define none /;"	d	file:
none	addnote.c	/^#define none /;"	d	file:
none	fgets.c	/^#define none /;"	d	file:
none	markAsRead.c	/^#define none /;"	d	file:
none	postit.c	/^#define none /;"	d	file:
note	addmore.c	/^char note[100];$/;"	v	typeref:typename:char[100]
note	addnote.c	/^char note[100];$/;"	v	typeref:typename:char[100]
note	fgets.c	/^char note[100];$/;"	v	typeref:typename:char[100]
note	markAsRead.c	/^char note[100];$/;"	v	typeref:typename:char[100]
note	postit.c	/^char note[]="notes\/";$/;"	v	typeref:typename:char[]
notedb	postit.c	/^void notedb()$/;"	f	typeref:typename:void
oneline	postit.c	/^void oneline(char* tcol)$/;"	f	typeref:typename:void
path	addmore.c	/^char path[80];$/;"	v	typeref:typename:char[80]
path	addnote.c	/^char path[80];$/;"	v	typeref:typename:char[80]
path	fgets.c	/^char path[80];$/;"	v	typeref:typename:char[80]
path	markAsRead.c	/^char path[80];$/;"	v	typeref:typename:char[80]
pink	addmore.c	/^#define pink /;"	d	file:
pink	addnote.c	/^#define pink /;"	d	file:
pink	fgets.c	/^#define pink /;"	d	file:
pink	markAsRead.c	/^#define pink /;"	d	file:
pink	postit.c	/^#define pink /;"	d	file:
readGet	postit.c	/^int readGet()$/;"	f	typeref:typename:int
readNote	postit.c	/^void readNote(string tname){$/;"	f	typeref:typename:void
readOLD	postit.c	/^void readOLD()$/;"	f	typeref:typename:void
red	addmore.c	/^#define red /;"	d	file:
red	addnote.c	/^#define red /;"	d	file:
red	fgets.c	/^#define red /;"	d	file:
red	markAsRead.c	/^#define red /;"	d	file:
red	postit.c	/^#define red /;"	d	file:
redc	fgets.c	/^char redc;$/;"	v	typeref:typename:char
showLog	postit.c	/^void showLog()$/;"	f	typeref:typename:void
spacer	fgets.c	/^char *spacer="            ";$/;"	v	typeref:typename:char *
spacer2	fgets.c	/^char *spacer2="                       ";$/;"	v	typeref:typename:char *
spacerb	fgets.c	/^char *spacerb=":            ";$/;"	v	typeref:typename:char *
spacerg	fgets.c	/^char *spacerg=";            ";$/;"	v	typeref:typename:char *
str	addmore.c	/^char str[150];$/;"	v	typeref:typename:char[150]
str	addnote.c	/^char str[150];$/;"	v	typeref:typename:char[150]
str	fgets.c	/^char str[450];$/;"	v	typeref:typename:char[450]
str	markAsRead.c	/^char str[150];$/;"	v	typeref:typename:char[150]
str2	addmore.c	/^char str2[150];$/;"	v	typeref:typename:char[150]
str2	addnote.c	/^char str2[150];$/;"	v	typeref:typename:char[150]
str2	fgets.c	/^char str2[450];$/;"	v	typeref:typename:char[450]
str2	markAsRead.c	/^char str2[150];$/;"	v	typeref:typename:char[150]
string	addmore.c	/^typedef char * string;$/;"	t	typeref:typename:char *	file:
string	addnote.c	/^typedef char * string;$/;"	t	typeref:typename:char *	file:
string	fgets.c	/^typedef char * string;$/;"	t	typeref:typename:char *	file:
string	markAsRead.c	/^typedef char * string;$/;"	t	typeref:typename:char *	file:
string	postit.c	/^typedef char * string;$/;"	t	typeref:typename:char *	file:
tcols	fgets.c	/^char tcols[8];$/;"	v	typeref:typename:char[8]
tester	addmore.c	/^char tester[10];$/;"	v	typeref:typename:char[10]
tester	addnote.c	/^char tester[10];$/;"	v	typeref:typename:char[10]
tester	markAsRead.c	/^char tester[10];$/;"	v	typeref:typename:char[10]
text	addmore.c	/^char text[200];$/;"	v	typeref:typename:char[200]
text	addnote.c	/^char text[200];$/;"	v	typeref:typename:char[200]
text	markAsRead.c	/^char text[200];$/;"	v	typeref:typename:char[200]
text2	addmore.c	/^char text2[200];$/;"	v	typeref:typename:char[200]
text2	addnote.c	/^char text2[200];$/;"	v	typeref:typename:char[200]
text2	markAsRead.c	/^char text2[200];$/;"	v	typeref:typename:char[200]
tname	postit.c	/^char tname[60];$/;"	v	typeref:typename:char[60]
tname2	postit.c	/^char tname2[60];$/;"	v	typeref:typename:char[60]
tt	postit.c	/^char tt;$/;"	v	typeref:typename:char
tvt	postit.c	/^int tvt;$/;"	v	typeref:typename:int
white	postit.c	/^#define white /;"	d	file:
writeIndex	addnote.c	/^void writeIndex(string fname)$/;"	f	typeref:typename:void
writeIndex	fgets.c	/^void writeIndex(char *fname)$/;"	f	typeref:typename:void
yellow	addmore.c	/^#define yellow /;"	d	file:
yellow	addnote.c	/^#define yellow /;"	d	file:
yellow	fgets.c	/^#define yellow /;"	d	file:
yellow	markAsRead.c	/^#define yellow /;"	d	file:
yellow	postit.c	/^#define yellow /;"	d	file:
